class DayofWeek:
    def __init__(self, data = None):
        self.data = data
        self.next = None

class Week:
    def __init__(self):
        self.__head = None

    def sethead(self, newdata):
        self.__head = DayofWeek(newdata)

    def gethead(self, newdata):
        self.__head = DayofWeek(newdata)

    def display(self):
        printval = self.__head
        while printval is not None:
            print (printval.data)
            printval = printval.next
        print "----------"

    def append(self, newdata):
        newDay = DayofWeek(newdata)
        if self.__head is None:
            self.__head = newDay
        else:
            temp = self.__head
            while temp.next is not None:
                temp = temp.next


            temp.next = newDay

    def reverse(self):
        previous = None
        temp = self.__head
        while (temp is not None):
            next = temp.next
            temp.next = previous
            previous = temp
            temp = next
        self.__head = previous

    def appendAfter(self, newdata):
        newDay = DayofWeek(newdata)
        newDay.next = self.__head
        self.__head = newDay

    def remove(self, node_value):
        current_node = self.head
        previous_node = None
        while current_node is not None:
            if current_node.data == node_value:

                if previous_node is not None:
                    previous_node.next = current_node.next
                else:
                    self.head = current_node.next

            previous_node = current_node
            current_node = current_node.next


def main():

    my_week = Week()

    my_week.append("Monday")
    my_week.append("Tuesday")
    my_week.append("Wednesday")
    my_week.append("Thursday")
    my_week.append("Friday")
    my_week.append("Saturday")
    my_week.append("Sunday")


    my_week.reverse()
    my_week.display()
    my_week.appendAfter("Monday")
    my_week.remove("Saturday")
main()
